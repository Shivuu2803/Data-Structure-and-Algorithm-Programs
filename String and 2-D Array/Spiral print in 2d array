#include <iostream>
using namespace std;

void spiralPrint(int** arr, int rows, int cols) 
{
    int top = 0;            // Index of the top row
    int bottom = rows - 1;  // Index of the bottom row
    int left = 0;           // Index of the left column
    int right = cols - 1;   // Index of the right column

    while (top <= bottom && left <= right) 
    {
        // Print top row
        for (int j = left; j <= right; ++j) 
        {
            cout << arr[top][j] << " ";
        }
        ++top;

        // Print right column
        for (int i = top; i <= bottom; ++i) 
        {
            cout << arr[i][right] << " ";
        }
        --right;

        // Print bottom row (if there is one)
        if (top <= bottom) 
        {
            for (int j = right; j >= left; --j) 
            {
                cout << arr[bottom][j] << " ";
            }
            --bottom;
        }

        // Print left column (if there is one)
        if (left <= right) {
            for (int i = bottom; i >= top; --i) {
                cout << arr[i][left] << " ";
            }
            ++left;
        }
    }
}

int main() 
{
    int rows, cols;
    cout << "Enter the number of rows: ";
    cin >> rows;
    cout << "Enter the number of columns: ";
    cin >> cols;

    int** arr = new int*[rows];
    for (int i = 0; i < rows; ++i) 
    {
        arr[i] = new int[cols];
    }

    cout << "Enter the elements of the array:" << endl;
    for (int i = 0; i < rows; ++i) 
    {
        for (int j = 0; j < cols; ++j) 
        {
            cin >> arr[i][j];
        }
    }

    cout << "Spiral print of the array:" << endl;
    spiralPrint(arr, rows, cols);

    // Deallocate the memory
    for (int i = 0; i < rows; ++i) 
    {
        delete[] arr[i];
    }
    delete[] arr;

    return 0;
}
